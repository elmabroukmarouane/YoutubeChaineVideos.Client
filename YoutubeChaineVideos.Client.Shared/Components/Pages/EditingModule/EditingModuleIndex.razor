@page "/editing-youtube-videos.html"
@using System.Text.Json
<PageTitle>@TitleContent</PageTitle>

<style>
    .label-bold-summary {
    font-weight: bold;
    }
</style>

<div class="container-fluid px-4">
    <TitleContent Title="Videos" />
    <DescriptionCardContent>
        This is the Edited Videos module
    </DescriptionCardContent>
    <div class="card mb-4">
        <TableHeader>
            <i class="fas fa-table me-1"></i> Videos Table
        </TableHeader>
        <RadzenFieldset @ref="RadzenFieldsetUpload" AllowCollapse="true" class="m-2">
            <HeaderTemplate>
                <span class="d-inline-flex align-items-center align-middle">
                    <RadzenIcon Icon="upload_file" class="me-1" /><b>Editing</b>
                </span>
            </HeaderTemplate>
            <ChildContent>
                <RadzenCard>
                    <RadzenButton class="mb-4" Icon="movie_edit" ButtonStyle="ButtonStyle.Primary" Text="Editing" Variant="Radzen.Variant.Filled" Size="ButtonSize.Medium" MouseEnter="@(args => ShowTooltip(args, CreateTooltipOptions(), "Editing"))" Click="@(e => ShowDialogAsync())" />
                    <RadzenButton class="mb-4" Icon="clear" ButtonStyle="ButtonStyle.Primary" Text="Clear" Variant="Radzen.Variant.Filled" Size="ButtonSize.Medium" MouseEnter="@(args => ShowTooltip(args, CreateTooltipOptions(), "Clear Editing Folders"))" Click="@(e => ShowClearFoldersDialogAsync(TitileDialog: "Clear Editing Folders", titleOkButton: "Clear"))" />
                    <RadzenButton class="mb-4" Icon="clear" ButtonStyle="ButtonStyle.Primary" Text="Tuncate Table" Variant="Radzen.Variant.Filled" Size="ButtonSize.Medium" MouseEnter="@(args => ShowTooltip(args, CreateTooltipOptions(), "Truncate Table"))" Click="@(e => ShowTruncateTableDialogAsync(TitileDialog: "Truncate Table", titleOkButton: "Truncate"))" />
                </RadzenCard>
            </ChildContent>
            <SummaryTemplate>
                <RadzenCard class="m-2">
                    <label class="label-bold-summary">Click on + to show EDITING Button</label>
                </RadzenCard>
            </SummaryTemplate>
        </RadzenFieldset>
        <RadzenFieldset @ref="RadzenFieldsetDataGrid" AllowCollapse="true" class="mb-2 ms-2 me-2">
            <HeaderTemplate>
                <span class="d-inline-flex align-items-center align-middle">
                    <RadzenIcon Icon="category" class="me-1" /><b>Videos List</b>
                </span>
            </HeaderTemplate>
            <ChildContent>
                @if (IsLoading)
                {
                    <LoadingPage />
                }
                else
                {
                    <MudTable Items="@Items" FixedHeader="true" Dense="true" Hover="true" Bordered="false" Striped="true" Filter="new Func<VideoViewModel,bool>(FilterFunc1)" @bind-SelectedItem="SelectedItem" MultiSelection="true" SelectionChangeable="true" @bind-SelectedItems="SelectedItems">
                        <ToolBarContent>
                            <MudText Typo="Typo.h6">Items List</MudText>
                            <MudSpacer />
                            <MudTextField @bind-Value="TableEditingString" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
                        </ToolBarContent>
                        <HeaderContent>
                            <MudTh><MudTableSortLabel SortBy="new Func<VideoViewModel, string>(x => x?.IsEdited?.ToString()!)">IsEdited ?</MudTableSortLabel></MudTh>
                            <MudTh><MudTableSortLabel SortBy="new Func<VideoViewModel, string>(x => x?.VideoId!)">Video ID</MudTableSortLabel></MudTh>
                            <MudTh><MudTableSortLabel SortBy="new Func<VideoViewModel, string>(x => x?.CategoryId!)">Category ID</MudTableSortLabel></MudTh>
                            <MudTh><MudTableSortLabel SortBy="new Func<VideoViewModel, string>(x => x?.Title!)">Title</MudTableSortLabel></MudTh>
                            <MudTh><MudTableSortLabel SortBy="new Func<VideoViewModel, string>(x => x?.Author!)">Author</MudTableSortLabel></MudTh>
                            <MudTh><MudTableSortLabel SortBy="new Func<VideoViewModel, string>(x => x?.Url!)">URL</MudTableSortLabel></MudTh>
                            <MudTh><MudTableSortLabel SortBy="new Func<VideoViewModel, string>(x => x?.Tags!)">TAGS</MudTableSortLabel></MudTh>
                            <MudTh><MudTableSortLabel SortBy="new Func<VideoViewModel, string>(x => x?.ChannelId!)">Channel ID</MudTableSortLabel></MudTh>
                            <MudTh><MudTableSortLabel SortBy="new Func<VideoViewModel, string>(x => x?.ChannelTitle!)">Channel Title</MudTableSortLabel></MudTh>
                            <MudTh><MudTableSortLabel SortBy="new Func<VideoViewModel, string>(x => x?.EditedName!)">Edited Name</MudTableSortLabel></MudTh>
                            <MudTh><MudTableSortLabel SortBy="new Func<VideoViewModel, string>(x => x?.EditedPath!)">Edited Path</MudTableSortLabel></MudTh>
                            <MudTh><MudTableSortLabel SortBy="new Func<VideoViewModel, string>(x => x?.Duration!.ToString()!)">Duration</MudTableSortLabel></MudTh>
                            <MudTh><MudTableSortLabel SortBy="new Func<VideoViewModel, string>(x => x?.CreateDate!.ToString()!)">Created Date</MudTableSortLabel></MudTh>
                            <MudTh><MudTableSortLabel SortBy="new Func<VideoViewModel, string>(x => x?.UpdatedBy!)">Updated By</MudTableSortLabel></MudTh>
                            <MudTh><MudTableSortLabel SortBy="new Func<VideoViewModel, string>(x => x?.UpdateDate!.ToString()!)">Updated Date</MudTableSortLabel></MudTh>
                        </HeaderContent>
                        <RowTemplate>
                            <MudTd DataLabel="IsEdited">
                                <MudCheckBox Disabled="true" Color="Color.Primary" @bind-Value=@context!.IsEdited></MudCheckBox>
                            </MudTd>
                            <MudTd DataLabel="VideoId">@context.VideoId</MudTd>
                            <MudTd DataLabel="CategoryId">@context.CategoryId</MudTd>
                            <MudTd DataLabel="Title">@context.Title</MudTd>
                            <MudTd DataLabel="Author">@context.Author</MudTd>
                            <MudTd DataLabel="Url"><a href="@context.Url" target="_blank">@context.Url</a></MudTd>
                            <MudTd DataLabel="Tags">@context.Tags</MudTd>
                            <MudTd DataLabel="ChannelId">@context.ChannelId</MudTd>
                            <MudTd DataLabel="ChannelTitle">@context.ChannelTitle</MudTd>
                            <MudTd DataLabel="EditedName">@context.EditedName</MudTd>
                            <MudTd DataLabel="EditedPath">@context.EditedPath</MudTd>
                            <MudTd DataLabel="Duration">@context.Duration</MudTd>
                            <MudTd DataLabel="CreatedBy">@context.CreatedBy</MudTd>
                            <MudTd DataLabel="CreateDate">@context.CreateDate.ToString()</MudTd>
                            <MudTd DataLabel="UpdatedBy">@context.UpdatedBy</MudTd>
                            <MudTd DataLabel="UpdateDate">@context.UpdateDate.ToString()</MudTd>
                        </RowTemplate>
                        <PagerContent>
                            <MudTablePager />
                        </PagerContent>
                    </MudTable>
                }
            </ChildContent>
            <SummaryTemplate>
                <RadzenCard class="mb-2 ms-2 me-2">
                    <label class="label-bold-summary">@Count @(Count > 1 ? "Videos" : "Video")</label>
                </RadzenCard>
            </SummaryTemplate>
        </RadzenFieldset>
    </div>
</div>